Widget #1

Name: Impersonate User
ID: impersonate_user

HTML Template:

<div class="container-fluid" ng-init="getRecentImpersonation()">
  <div class="row">
    <div class="btn-group btn-group-sm btn-group-justified" role="group">
      <label class="btn btn-info btn-sm" ng-model="c.selectedAction" uib-btn-radio="'sp'">Service Portal</label>
      <label class="btn btn-primary btn-sm" ng-model="c.selectedAction" uib-btn-radio="'classic'">Classic UI</label>
    </div>
  </div>
  <div class="row top-buffer" ng-if="data.isImpersonating">
    <div class="btn-group btn-group-sm btn-group-justified" role="group">
      <label ng-click="impersonate(c.data.realUser)" class="btn btn-danger btn-lg btn-block">
        <i class="fa fa-stop m-r-sm"></i>
        STOP Impersonating</label>
    </div>
  </div>
  <div class="row top-buffer">
    <div class="record-picker">
      <sn-record-picker field="c.data.toImpersonate" table="'sys_user'" display-field="'name'" on-change="impersonate(c.data.toImpersonate.value)"
                        display-fields="'user_name'" search-fields="'name'" page-size="100" placeholder="Search for user" options="{cache: true, allowClear: false}"
                        default-query="'active=true^locked_out=false^web_service_access_only=false^ORweb_service_access_onlyISEMPTY'"
                        value-field="'sys_id'">
      </sn-record-picker>
    </div>
  </div>
  <div class="row top-buffer">
    <div class="panel panel-default">
      <div class="panel-heading">
        <h5 class="panel-title">
          ${Recent Impersonations}
        </h5>
      </div>
      <a ng-bind="rec.user_display_value" ng-repeat="rec in recentImpersonations" href="javascript:void(0)" class="list-group-item ng-binding ng-scope"
         ng-click="impersonate(rec.user_sys_id)"></a>
    </div>
  </div>
</div>

CSS - SCSS:

.top-buffer { 
  margin-top:20px;
}

Client Script:

function($scope, $http, $window) {
	/* widget controller */
	var c = this;
	c.data.toImpersonate = {};

	c.selectedAction = {};

	$scope.impersonate = function(userName){
		//If we don't have a user we can't impersonate
		if(!userName){
			return;
		}
		//Call to the impersonation api with username/sys_id
		$http.post("/api/now/ui/impersonate/" + userName, {}).success(function(){
			$scope.showError = false;
			if(c.selectedAction === "classic"){
				window.location = "/";
			}else if(c.selectedAction === "sp" || c.selectedAction === null){
				window.location.reload();
			}else{
				window.location.reload();
			}

		}).error(function(response){
			if(response.error){
				$scope.showError = true;
				$scope.error = response.error;
				console.warn("Impersonate Failed! with error:", response.error);
			}
		})                             
	};

	//call to the impersonation api Get recent impersonations
	$scope.getRecentImpersonation = function(){
		$http.get("/api/now/ui/impersonate/recent", {}).success(function(response){
			$scope.showError = false;
			$scope.recentImpersonations = response.result;
		}).error(function(response){
			if(response.error){
				$scope.showError = true;
				$scope.error = response.error;
				console.warn("Get Recent Impersonations Failed! with error:" + response.error);
			}
		})
	};
}

Server Script:

(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	data.isImpersonating =  new GlideImpersonate().isImpersonating();
	data.realUser =  gs.getImpersonatingUserName();
})();
